name: "Build and push docker"
description: "Build and push docker image"

inputs:
  DOCKERHUB_USERNAME:
    description: "Dockerhub username used to read public images"
    required: true
  DOCKERHUB_TOKEN:
    description: "Dockerhub token used to read public images"
    required: true

  AWS_REGION:
    description: "AWS region"
    required: true

  AWS_ROLE_TO_ASSUME:
    description: "AWS role to use"
    required: false

  name:
    description: "Name of the image. Example evaka/image"
    required: true
  path:
    description: "Docker context path"
    default: "."
    required: false
  build-args:
    description: "Docker build-args. See docker/build-push-action build-args"
    required: false
    default: ""
  suffix:
    description: "Tag suffix for images"
    default: null
  target:
    description: "Docker target"
    default: null
  push:
    description: "Push images to registry"
    default: true
  load:
    description: "Load docker image"
    default: false
  dockerfile:
    description: "Dockerfile path"
  platforms:
    description: "Comma separated list of target platforms"
    default: 'linux/amd64'
  provenance:
    description: "Set provenance for docker build"
    default: false

outputs:
  image:
    description: "Full image name with registry and tag"
    value: "${{ steps.ecr.outputs.registry }}/${{ inputs.name }}:${{ github.event.pull_request.head.sha || github.sha }}"

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: ${{ github.actor != 'dependabot[bot]' && !github.event.pull_request.head.repo.fork }}
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.DOCKERHUB_USERNAME }}
        password: ${{ inputs.DOCKERHUB_TOKEN }}

    - name: Configure AWS credentials
      if: ${{ github.actor != 'dependabot[bot]' && !github.event.pull_request.head.repo.fork }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.AWS_REGION }}
        role-to-assume: ${{ inputs.AWS_ROLE_TO_ASSUME }}
        role-duration-seconds: 1200
        mask-aws-account-id: false

    - name: Login to Amazon ECR
      if: ${{ github.actor != 'dependabot[bot]' && !github.event.pull_request.head.repo.fork }}
      id: ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker metadata
      id: metadata
      env:
        DOCKER_METADATA_PR_HEAD_SHA: "true"
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ steps.ecr.outputs.registry }}/${{ inputs.name }}
        tags: |
          type=semver,pattern={{raw}}
          type=ref,event=branch
          type=sha,format=long,prefix=

    - name: Push
      if: ${{ github.actor != 'dependabot[bot]' && !github.event.pull_request.head.repo.fork }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.path }}
        load: ${{ inputs.load }}
        push: ${{ inputs.push }}
        target: ${{ inputs.target }}
        file: ${{ inputs.dockerfile }}
        build-args: ${{ inputs.build-args }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: ${{ inputs.platforms }}
        provenance: ${{ inputs.provenance }}
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}